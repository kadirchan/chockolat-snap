{"version":3,"file":"component---src-pages-index-tsx.js","mappings":"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","sources":["webpack://site/./src/pages/index.tsx"],"sourcesContent":["import { useContext } from 'react';\nimport styled from 'styled-components';\n\nimport {\n  ConnectButton,\n  InstallFlaskButton,\n  ReconnectButton,\n  SendHelloButton,\n  Card,\n} from '../components';\nimport { defaultSnapOrigin } from '../config';\nimport { MetamaskActions, MetaMaskContext } from '../hooks';\nimport {\n  connectSnap,\n  getSnap,\n  isLocalSnap,\n  sendHello,\n  shouldDisplayReconnectButton,\n} from '../utils';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex: 1;\n  margin-top: 7.6rem;\n  margin-bottom: 7.6rem;\n  ${({ theme }) => theme.mediaQueries.small} {\n    padding-left: 2.4rem;\n    padding-right: 2.4rem;\n    margin-top: 2rem;\n    margin-bottom: 2rem;\n    width: auto;\n  }\n`;\n\nconst Heading = styled.h1`\n  margin-top: 0;\n  margin-bottom: 2.4rem;\n  text-align: center;\n`;\n\nconst Span = styled.span`\n  color: ${(props) => props.theme.colors.primary?.default};\n`;\n\nconst Subtitle = styled.p`\n  font-size: ${({ theme }) => theme.fontSizes.large};\n  font-weight: 500;\n  margin-top: 0;\n  margin-bottom: 0;\n  ${({ theme }) => theme.mediaQueries.small} {\n    font-size: ${({ theme }) => theme.fontSizes.text};\n  }\n`;\n\nconst CardContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  max-width: 64.8rem;\n  width: 100%;\n  height: 100%;\n  margin-top: 1.5rem;\n`;\n\nconst Notice = styled.div`\n  background-color: ${({ theme }) => theme.colors.background?.alternative};\n  border: 1px solid ${({ theme }) => theme.colors.border?.default};\n  color: ${({ theme }) => theme.colors.text?.alternative};\n  border-radius: ${({ theme }) => theme.radii.default};\n  padding: 2.4rem;\n  margin-top: 2.4rem;\n  max-width: 60rem;\n  width: 100%;\n\n  & > * {\n    margin: 0;\n  }\n  ${({ theme }) => theme.mediaQueries.small} {\n    margin-top: 1.2rem;\n    padding: 1.6rem;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  background-color: ${({ theme }) => theme.colors.error?.muted};\n  border: 1px solid ${({ theme }) => theme.colors.error?.default};\n  color: ${({ theme }) => theme.colors.error?.alternative};\n  border-radius: ${({ theme }) => theme.radii.default};\n  padding: 2.4rem;\n  margin-bottom: 2.4rem;\n  margin-top: 2.4rem;\n  max-width: 60rem;\n  width: 100%;\n  ${({ theme }) => theme.mediaQueries.small} {\n    padding: 1.6rem;\n    margin-bottom: 1.2rem;\n    margin-top: 1.2rem;\n    max-width: 100%;\n  }\n`;\n\nconst Index = () => {\n  const [state, dispatch] = useContext(MetaMaskContext);\n\n  const isMetaMaskReady = isLocalSnap(defaultSnapOrigin)\n    ? state.isFlask\n    : state.snapsDetected;\n\n  const handleConnectClick = async () => {\n    try {\n      await connectSnap();\n      const installedSnap = await getSnap();\n\n      dispatch({\n        type: MetamaskActions.SetInstalled,\n        payload: installedSnap,\n      });\n    } catch (error) {\n      console.error(error);\n      dispatch({ type: MetamaskActions.SetError, payload: error });\n    }\n  };\n\n  const handleSendHelloClick = async () => {\n    try {\n      await sendHello();\n    } catch (error) {\n      console.error(error);\n      dispatch({ type: MetamaskActions.SetError, payload: error });\n    }\n  };\n\n  return (\n    <Container>\n      <Heading>\n        Welcome to <Span>template-snap</Span>\n      </Heading>\n      <Subtitle>\n        Get started by editing <code>src/index.ts</code>\n      </Subtitle>\n      <CardContainer>\n        {state.error && (\n          <ErrorMessage>\n            <b>An error happened:</b> {state.error.message}\n          </ErrorMessage>\n        )}\n        {!isMetaMaskReady && (\n          <Card\n            content={{\n              title: 'Install',\n              description:\n                'Snaps is pre-release software only available in MetaMask Flask, a canary distribution for developers with access to upcoming features.',\n              button: <InstallFlaskButton />,\n            }}\n            fullWidth\n          />\n        )}\n        {!state.installedSnap && (\n          <Card\n            content={{\n              title: 'Connect',\n              description:\n                'Get started by connecting to and installing the example snap.',\n              button: (\n                <ConnectButton\n                  onClick={handleConnectClick}\n                  disabled={!isMetaMaskReady}\n                />\n              ),\n            }}\n            disabled={!isMetaMaskReady}\n          />\n        )}\n        {shouldDisplayReconnectButton(state.installedSnap) && (\n          <Card\n            content={{\n              title: 'Reconnect',\n              description:\n                'While connected to a local running snap this button will always be displayed in order to update the snap if a change is made.',\n              button: (\n                <ReconnectButton\n                  onClick={handleConnectClick}\n                  disabled={!state.installedSnap}\n                />\n              ),\n            }}\n            disabled={!state.installedSnap}\n          />\n        )}\n        <Card\n          content={{\n            title: 'Send Hello message',\n            description:\n              'Display a custom message within a confirmation screen in MetaMask.',\n            button: (\n              <SendHelloButton\n                onClick={handleSendHelloClick}\n                disabled={!state.installedSnap}\n              />\n            ),\n          }}\n          disabled={!state.installedSnap}\n          fullWidth={\n            isMetaMaskReady &&\n            Boolean(state.installedSnap) &&\n            !shouldDisplayReconnectButton(state.installedSnap)\n          }\n        />\n        <Notice>\n          <p>\n            Please note that the <b>snap.manifest.json</b> and{' '}\n            <b>package.json</b> must be located in the server root directory and\n            the bundle must be hosted at the location specified by the location\n            field.\n          </p>\n        </Notice>\n      </CardContainer>\n    </Container>\n  );\n};\n\nexport default Index;\n"],"names":["useContext","styled","ConnectButton","InstallFlaskButton","ReconnectButton","SendHelloButton","Card","defaultSnapOrigin","MetamaskActions","MetaMaskContext","connectSnap","getSnap","isLocalSnap","sendHello","shouldDisplayReconnectButton","jsx","_jsx","jsxs","_jsxs","Container","div","withConfig","displayName","theme","mediaQueries","small","Heading","h1","Span","span","props","_props$theme$colors$p","colors","primary","default","Subtitle","p","fontSizes","large","text","CardContainer","Notice","_theme$colors$backgro","background","alternative","_theme$colors$border","border","_theme$colors$text","radii","ErrorMessage","_theme$colors$error","error","muted","_theme$colors$error2","_theme$colors$error3","Index","state","dispatch","isMetaMaskReady","isFlask","snapsDetected","handleConnectClick","installedSnap","type","SetInstalled","payload","console","SetError","handleSendHelloClick","children","message","content","title","description","button","fullWidth","onClick","disabled","Boolean"],"sourceRoot":""}